# some test commands run
# valgrind after an install
/home/zam/bin/bin/valgrind --leak-check=yes --track-origins=yes -v build/pandora -p test/test_cases/prg4567.fa -r test/test_cases/read0.fa -o build/basic_test_output &> build/pandora_valgrind_output.txt

# oxaA
mkdir test/test_cases/oxaA
cp ../reference_graphs/prg/ecoli/common_genes/oxaA.fa.aligned.prg test/test_cases/oxaA/
vim test/test_cases/oxaA/oxaA.fa.aligned.prg 
mv test/test_cases/oxaA/oxaA.fa.aligned.prg test/test_cases/oxaA/oxaA_prg.fasta 
cp ../reference_graphs/data/gram_neg/ecoli/nctc_20160803/ERS513139.fasta.gz test/test_cases/oxaA/ERS513139.fasta.gz
gunzip test/test_cases/oxaA/ERS513139.fasta.gz 
build/pandora test/test_cases/oxaA/oxaA_prg.fasta test/test_cases/oxaA/ERS513139.fasta test/test_cases/oxa/oxaA_ERS513139 &> test/test_cases/oxaA/oxaA_ERS513139.log
build/pandora test/test_cases/oxaA/oxaA_prg.fasta test/test_cases/oxaA/ERS513139.fasta test/test_cases/oxa/oxaA_ERS513139_5.15.500.4 5 15 500 4 &> test/test_cases/oxaA/oxaA_ERS513139_5.15.500.4.log

#oxa
mkdir test/test_cases/oxa
cp ../nanopore_mapping/code/map_to_prg/tests/oxa_prg.fasta ../nanopore_mapping/code/map_to_prg/tests/oxa_read.fasta test/test_cases/oxa/
mv test/test_cases/oxa/oxa_read.fasta test/test_cases/oxa/oxa_oxa9_read.fasta
cp ../nanopore_mapping/code/map_to_prg/tests/JR_FAA63668_14102015_kpne_CAV1596_reads.fasta test/test_cases/oxa/
mv test/test_cases/oxa/oxa_oxa9_read.fasta test/test_cases/oxa/oxa9_read.fasta
build/pandora test/test_cases/oxa/oxa_prg.fasta test/test_cases/oxa/oxa9_read.fasta test/test_cases/oxa/oxa_oxa9 &> test/test_cases/oxa/oxa_oxa9.log
# looks like this oxa prg is wrong... :(

# made a demo_oxaA dir with a shortened read (was a whole genome, maybe why it
# was crashing.
perf record build/pandora test/test_cases/demo_oxaA/oxaA_prg.fasta test/test_cases/demo_oxaA/ERS513139.fasta test/test_cases/demo_oxa/oxaA_ERS513139_5.15.500.4 5 15 500 4 &> test/test_cases/demo_oxaA/oxaA_ERS513139_5.15.500.4.log
perf report

# try a second time after small changes
cd test/test_cases/demo_oxaA
perf record ../../../build/pandora oxaA_prg.fasta ERS513139.fasta 011116_oxaA_ERS513139_5.15.500.4 5 15 500 4 &> 011116_oxaA_ERS513139_5.15.500.4.log

# the example I was using had oxaA in rev complement. Found an example with it
# in forward direction
cp ../reference_graphs/data/gram_neg/ecoli/nctc_20160803/ERS718588.fasta.gz test/test_cases/demo_oxaA/
gunzip test/test_cases/demo_oxaA/ERS718588.fasta.gz
vim test/test_cases/demo_oxaA/ERS718588.fasta.gz
perf record ../../../build/pandora oxaA_prg.fasta ERS718588.fasta 011116_oxaA_ERS718588_5.15.500.4 5 15 500 4 &> 011116_oxaA_ERS718588_5.15.500.4.log
/home/zam/bin/bin/valgrind --leak-check=yes --track-origins=yes -v ../../../build/pandora oxaA_prg.fasta ERS718588.fasta 011116_oxaA_ERS718588_5.15.500.4 5 15 500 4 &> 011116_oxaA_ERS718588_5.15.500.4.valgrind.log

# 03-11-16
# try with the full genome against oxaA
cp ../reference_graphs/data/gram_neg/ecoli/nctc_20160803/ERS718588.fasta.gz test/test_cases/oxaA/
ls test/test_cases/oxaA/
gunzip test/test_cases/oxaA/ERS718588.fasta.gz
cd test/test_cases/oxaA/
perf record ../../../build/pandora -p oxaA_prg.fasta -r ERS718588.fasta -o oxaA_ERS718588_5.15.500.4 -w 5 -k 15 -m 500 -c 4 &> oxaA_ERS718588_5.15.500.4.log
# NB this took just 25 seconds, and got the right answer!!!

# try for OXA resistance gene family. Note have to add something to handle the
# dead ends to the split by site parser
# oxa prg vs oxa9 single read (used in generation of oxa prg)
build/pandora -p test/test_cases/oxa/oxa_prg.fasta -r test/test_cases/oxa/oxa9_read.fasta -o test/test_cases/oxa/oxa_oxa9 &> test/test_cases/oxa/oxa_oxa9.log
# took 1 min 21 sec
# and with real reads which overlap oxa-9
build/pandora -p test/test_cases/oxa/oxa_prg.fasta -r test/test_cases/oxa/JR_FAA63668_14102015_kpne_CAV1596_reads.fasta -o test/test_cases/oxa/oxa_JR_FAA63668_14102015_kpne_CAV1596 &> test/test_cases/oxa/oxa_JR_FAA63668_14102015_kpne_CAV1596.log

# finally try again with zam's example. Likes to segfault not sure why. Uses
# whole genome PRG, which I have converted from sorina to rachel format with
# script.
build/pandora -p test/test_cases/zam/prg.rachel.fa -r test/test_cases/zam/read.fa -o test/test_cases/zam/zam -w 5 -k 15 -c 4 -m 500 &> test/test_cases/zam/zam.log
